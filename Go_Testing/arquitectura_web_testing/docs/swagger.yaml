definitions:
  handler.UserRequest:
    properties:
      active:
        type: boolean
      age:
        type: integer
      date:
        type: string
      email:
        type: string
      height:
        type: number
      last_name:
        type: string
      name:
        type: string
    required:
    - active
    - age
    - date
    - email
    - height
    - last_name
    - name
    type: object
  handler.UserRequestPatch:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  web.Response:
    properties:
      code:
        type: string
      data: {}
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: Gianfranco Capodici
    url: http://www.swagger.io/support
  description: This is a simple API development by Gianfranco Capodici.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developers.mercadolibre.com.ar/es_ar/terminos-y-condiciones
  title: Arquitectura del bootcamp - API
  version: "1.0"
paths:
  /users:
    get:
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List users
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not found users
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.Response'
      summary: Showlist users
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: token requerido
        in: header
        name: token
        required: true
        type: string
      - description: User to Store
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: New user
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: BadRequest
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
      summary: Store user
      tags:
      - Users
  /users/{id}:
    delete:
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: BadRequest
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Delete user
      tags:
      - Users
    patch:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      - description: user name
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/handler.UserRequestPatch'
      produces:
      - application/json
      responses:
        "200":
          description: User
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: BadRequest
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Update Name
      tags:
      - Users
    put:
      consumes:
      - application/json
      parameters:
      - description: Id user
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: User to Update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update user
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: BadRequest
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not found user
          schema:
            $ref: '#/definitions/web.Response'
      summary: Update user
      tags:
      - Users
swagger: "2.0"
